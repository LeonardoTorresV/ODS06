/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista1;

import java.util.regex.*;
import conexion1.Conexion1;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MIGUEL
 */
public class Tarjetas extends javax.swing.JFrame {

    Conexion1 conex = new Conexion1();

    Connection cn;
    Statement st;
    ResultSet rs;
    int id;

    DefaultTableModel modelo;

    public Tarjetas() {
        initComponents();
        this.setTitle("Tabla de tarjetas");
        this.setLocationRelativeTo(null);
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbTipoTarjeta = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxActivo = new javax.swing.JCheckBox();
        cbxInactivo = new javax.swing.JCheckBox();
        txtID = new javax.swing.JTextField();
        txtNumeroTarjeta = new javax.swing.JTextField();
        txtCVC = new javax.swing.JTextField();
        txtFechaExpiracion = new javax.swing.JTextField();
        txtIdDonador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaTarjetas = new javax.swing.JTable();
        btnAGREGAR = new javax.swing.JButton();
        btnMODIFICAR = new javax.swing.JButton();
        btnELIMINAR = new javax.swing.JButton();
        btnNUEVO = new javax.swing.JButton();
        btnREGRESAR = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Tarjeta");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("ID:");

        cbTipoTarjeta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Credito", "Debito" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Tipo de tarjeta:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Numero de tarjeta:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("CVC:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Fecha de expiracion:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("ID_donador:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Estado");

        buttonGroup1.add(cbxActivo);
        cbxActivo.setText("1");
        cbxActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxActivoActionPerformed(evt);
            }
        });

        buttonGroup1.add(cbxInactivo);
        cbxInactivo.setText("0");
        cbxInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxInactivoActionPerformed(evt);
            }
        });

        txtID.setEditable(false);

        txtNumeroTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroTarjetaActionPerformed(evt);
            }
        });

        txtCVC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCVCActionPerformed(evt);
            }
        });

        txtFechaExpiracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaExpiracionActionPerformed(evt);
            }
        });

        txtIdDonador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdDonadorActionPerformed(evt);
            }
        });

        TablaTarjetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo de Tarjeta", "Numero de tarjeta", "CVC", "Fecha de expiracion", "ID_donador", "Estado"
            }
        ));
        TablaTarjetas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaTarjetasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaTarjetas);
        if (TablaTarjetas.getColumnModel().getColumnCount() > 0) {
            TablaTarjetas.getColumnModel().getColumn(0).setMinWidth(50);
            TablaTarjetas.getColumnModel().getColumn(0).setPreferredWidth(50);
            TablaTarjetas.getColumnModel().getColumn(0).setMaxWidth(50);
            TablaTarjetas.getColumnModel().getColumn(3).setMinWidth(60);
            TablaTarjetas.getColumnModel().getColumn(3).setPreferredWidth(60);
            TablaTarjetas.getColumnModel().getColumn(3).setMaxWidth(60);
            TablaTarjetas.getColumnModel().getColumn(5).setMinWidth(70);
            TablaTarjetas.getColumnModel().getColumn(5).setPreferredWidth(70);
            TablaTarjetas.getColumnModel().getColumn(5).setMaxWidth(70);
            TablaTarjetas.getColumnModel().getColumn(6).setMinWidth(70);
            TablaTarjetas.getColumnModel().getColumn(6).setPreferredWidth(70);
            TablaTarjetas.getColumnModel().getColumn(6).setMaxWidth(70);
        }

        btnAGREGAR.setText("AGREGAR");
        btnAGREGAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAGREGARActionPerformed(evt);
            }
        });

        btnMODIFICAR.setText("MODIFICAR");
        btnMODIFICAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMODIFICARActionPerformed(evt);
            }
        });

        btnELIMINAR.setText("ELIMINAR");
        btnELIMINAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnELIMINARActionPerformed(evt);
            }
        });

        btnNUEVO.setText("NUEVO");
        btnNUEVO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNUEVOActionPerformed(evt);
            }
        });

        btnREGRESAR.setText("REGRESAR");
        btnREGRESAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnREGRESARActionPerformed(evt);
            }
        });

        jLabel9.setText("Activo |1|  Inactivo |2|");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtFechaExpiracion))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNumeroTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(cbTipoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCVC, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtIdDonador, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbxActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cbxInactivo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAGREGAR)
                                    .addComponent(btnELIMINAR))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnMODIFICAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnNUEVO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnREGRESAR)
                        .addGap(348, 348, 348)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnREGRESAR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTipoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNumeroTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCVC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtFechaExpiracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtIdDonador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbxActivo)
                            .addComponent(cbxInactivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAGREGAR)
                            .addComponent(btnMODIFICAR))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnELIMINAR)
                            .addComponent(btnNUEVO)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxActivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxActivoActionPerformed

    private void txtNumeroTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroTarjetaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroTarjetaActionPerformed

    private void txtCVCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCVCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCVCActionPerformed

    private void txtFechaExpiracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaExpiracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaExpiracionActionPerformed

    private void txtIdDonadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdDonadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdDonadorActionPerformed

    private void btnAGREGARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAGREGARActionPerformed
        agregar();
        listar();
        nuevo();
    }//GEN-LAST:event_btnAGREGARActionPerformed

    private void btnMODIFICARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMODIFICARActionPerformed
        modificar();
        listar();
        nuevo();
    }//GEN-LAST:event_btnMODIFICARActionPerformed

    private void btnREGRESARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnREGRESARActionPerformed
        ventanaPrincipal ventana1 = new ventanaPrincipal();
        ventana1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnREGRESARActionPerformed

    private void cbxInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxInactivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxInactivoActionPerformed

    private void TablaTarjetasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaTarjetasMouseClicked
        int fila = TablaTarjetas.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "fila no seleccionada");
        } else {
            id = Integer.parseInt((String) TablaTarjetas.getValueAt(fila, 0).toString());
            String tipoTarjeta = (String) TablaTarjetas.getValueAt(fila, 1);
            String numeroTarjeta = (String) TablaTarjetas.getValueAt(fila, 2);
            String cvc = (String) TablaTarjetas.getValueAt(fila, 3);
            String fechaExpiracion = (String) TablaTarjetas.getValueAt(fila, 4);
            String idDonador = (String) TablaTarjetas.getValueAt(fila, 5);
            String estado = (String) TablaTarjetas.getValueAt(fila, 6);

            txtID.setText("" + id);
            cbTipoTarjeta.setSelectedItem(tipoTarjeta);
            txtNumeroTarjeta.setText(numeroTarjeta);
            txtCVC.setText(cvc);
            txtFechaExpiracion.setText(fechaExpiracion);
            txtIdDonador.setText(idDonador);

            if (estado.equals(cbxActivo.getActionCommand())) {
                cbxActivo.setSelected(true);
            } else if (estado.equals(cbxInactivo.getActionCommand())) {
                cbxInactivo.setSelected(true);
            }

        }
    }//GEN-LAST:event_TablaTarjetasMouseClicked

    private void btnELIMINARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnELIMINARActionPerformed
       eliminar();
        listar();
        nuevo();
    }//GEN-LAST:event_btnELIMINARActionPerformed

    private void btnNUEVOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNUEVOActionPerformed
        nuevo();
    }//GEN-LAST:event_btnNUEVOActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tarjetas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tarjetas().setVisible(true);
            }
        });
    }

    public void listar() {
        String sql = "SELECT * FROM card;";

        try {
            cn = conex.getConexion1();
            st = cn.createStatement();
            rs = st.executeQuery(sql);

            Object[] tarjetas = new Object[7];
            modelo = (DefaultTableModel) TablaTarjetas.getModel();
            while (rs.next()) {
                tarjetas[0] = rs.getInt("id");
                tarjetas[1] = rs.getString("card_type");
                tarjetas[2] = rs.getString("card_number");
                tarjetas[3] = rs.getString("cvc");
                tarjetas[4] = rs.getString("expiration_date");
                tarjetas[5] = rs.getString("donor_id");
                tarjetas[6] = rs.getString("activo");
                modelo.addRow(tarjetas);
            }
            TablaTarjetas.setModel(modelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "No se pudo listar las tarjetas, eror " + e);
        }
    }

    public void agregar() {
        String tipoTarjeta = (String) cbTipoTarjeta.getSelectedItem();
        String numeroTarjeta = txtNumeroTarjeta.getText();
        String cvc = txtCVC.getText();
        String fechaExpiracion = txtFechaExpiracion.getText();
        String estado = "";
        String idDonador = txtIdDonador.getText();

        if (numeroTarjeta.equals("") || cvc.equals("") || fechaExpiracion.equals("") || idDonador.equals("")) {
            JOptionPane.showMessageDialog(null, "Faltan valores");
            if ("Seleccionar".equals(tipoTarjeta)) {
                JOptionPane.showMessageDialog(null, "Seleccionee un Iten valido");
            }
        }

        if (cbxActivo.isSelected()) {
            estado = cbxActivo.getActionCommand();
        } else if (cbxInactivo.isSelected()) {
            estado = cbxInactivo.getActionCommand();
        }

        int IDDonador = Integer.parseInt(idDonador);
        if (IDDonador == 0) {
            JOptionPane.showMessageDialog(null, "El id no puede ser cero");
        } else if (!fechaExpiracion.matches("^(0[1-9]|1[0-2])/\\d{2}$")) {
            JOptionPane.showMessageDialog(null, "El formato de la fecha debe de ser MM/YY");
            limpiar();
        } else {
            String sql = "INSERT INTO card (card_type, card_number, cvc, expiration_date, donor_id, activo) VALUES ('" + tipoTarjeta + "', '" + numeroTarjeta + "', '" + cvc + "', '" + fechaExpiracion + "', '" + idDonador + "', '" + estado + "')";
            try {
                cn = conex.getConexion1();
                st = cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Tarjeta agregada con exito");
                limpiar();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "No se pudo agregada la tarjeta, error " + e);
                limpiar();
            }
        }
    }

    public void modificar() {
        String tipoTarjeta = (String) cbTipoTarjeta.getSelectedItem();
        String numeroTarjeta = txtNumeroTarjeta.getText();
        String cvc = txtCVC.getText();
        String fechaExpiracion = txtFechaExpiracion.getText();
        String estado = "";
        String idDonador = txtIdDonador.getText();

        if (numeroTarjeta.equals("") || cvc.equals("") || fechaExpiracion.equals("") || idDonador.equals("")) {
            JOptionPane.showMessageDialog(null, "Faltan valores");
            if ("Seleccionar".equals(tipoTarjeta)) {
                JOptionPane.showMessageDialog(null, "Seleccionee un Iten valido");
            }
        }

        if (cbxActivo.isSelected()) {
            estado = cbxActivo.getActionCommand();
        } else if (cbxInactivo.isSelected()) {
            estado = cbxInactivo.getActionCommand();
        }

        int IDDonador = Integer.parseInt(idDonador);
        if (IDDonador == 0) {
            JOptionPane.showMessageDialog(null, "El id no puede ser cero");
        }else if (!fechaExpiracion.matches("^(0[1-9]|1[0-2])/\\d{2}$")) {
            JOptionPane.showMessageDialog(null, "El formato de la fecha debe de ser MM/YY");
            limpiar();
        } else {
            String sql = "UPDATE card SET "
                    + "card_type = '" + tipoTarjeta + "', card_number = '" + numeroTarjeta + "', cvc = '" + cvc + "', expiration_date = '" + fechaExpiracion + "', donor_id = '" + idDonador + "', activo = '" + estado + "' WHERE id=" + id;
            try {
                cn = conex.getConexion1();
                st = cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Tarjeta modificada con exito");
                limpiar();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "No se pudo modificar la tarjeta, error " + e);
                limpiar();
            }
        }
    }
    
    public void eliminar(){
        int fila = TablaTarjetas.getSelectedRow();
        
        if(fila == -1){
            JOptionPane.showMessageDialog(null, "fila no seleccionada");
            limpiar();
        } else{
            String sql = "DELETE FROM card WHERE id ="+ id;
            try {
                cn = conex.getConexion1();
                st = cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Tarjeta eliminada exitosamente");
                limpiar();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar la tarjeta, error " + e);
            }
        }
       
    }
    
    public void nuevo(){
        txtID.setText("");
        cbTipoTarjeta.setSelectedItem("Seleccionar");
        txtNumeroTarjeta.setText("");
        txtCVC.setText("");
        txtFechaExpiracion.setText("");
        txtIdDonador.setText("");
        txtNumeroTarjeta.requestFocus();
    }

    public void limpiar() {
        for (int i = 0; i < TablaTarjetas.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaTarjetas;
    private javax.swing.JButton btnAGREGAR;
    private javax.swing.JButton btnELIMINAR;
    private javax.swing.JButton btnMODIFICAR;
    private javax.swing.JButton btnNUEVO;
    private javax.swing.JButton btnREGRESAR;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbTipoTarjeta;
    private javax.swing.JCheckBox cbxActivo;
    private javax.swing.JCheckBox cbxInactivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCVC;
    private javax.swing.JTextField txtFechaExpiracion;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIdDonador;
    private javax.swing.JTextField txtNumeroTarjeta;
    // End of variables declaration//GEN-END:variables
}
